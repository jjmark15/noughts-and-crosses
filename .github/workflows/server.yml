name: Server

on:
  push:
    branches: [ main ]
    paths:
      - 'server/**'
      - '.github/workflows/server.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'server/**'
      - '.github/workflows/server.yml'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Cache cargo build
        uses: actions/cache@v2
        with:
          path: server/target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Build
        run: cargo build --tests --manifest-path ./server/Cargo.toml --verbose
      - name: Run unit tests
        run: cargo test --lib --manifest-path ./server/Cargo.toml --verbose

  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./server
          pull: true
          push: true
          cache-from: type=registry,ref=ghcr.io/jjmark15/nc-game-server:latest
          cache-to: type=inline
          tags: ghcr.io/jjmark15/nc-game-server:latest

  ft:
    runs-on: ubuntu-latest
    needs: build-and-push-image

    services:
      game-server:
        image: ghcr.io/jjmark15/nc-game-server:latest
        ports:
          - 3030:3030
        credentials:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
        env:
          RUST_LOG: info

    steps:
      - uses: actions/checkout@v2
      - name: Cache cargo build
        uses: actions/cache@v2
        with:
          path: server/target
          key: ${{ runner.os }}-cargo-build-target-ft-${{ hashFiles('**/Cargo.lock') }}
      - name: Build
        run: cargo build --test api --manifest-path ./server/Cargo.toml --verbose
      - name: Run functional tests
        run: cargo test --test api --manifest-path ./server/Cargo.toml --verbose
        env:
          GAME_SERVER_HOST: localhost:3030
